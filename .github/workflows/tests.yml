name: fastfox
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  lint:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache npm cache
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.cache/npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Lint
        run: npm lint
  format:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache npm cache
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.cache/npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Format Check
        run: npm format:check
  # test:
  #   runs-on: buildjet-4vcpu-ubuntu-2204
  #   container:
  #     image: node:20
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Cache node modules
  #       id: npm-cache
  #       uses: buildjet/cache@v3
  #       with:
  #         path: ~/.node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-json.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-
  #     - name: Cache npm cache
  #       id: npm-cache
  #       uses: buildjet/cache@v3
  #       with:
  #         path: ~/.cache/npm
  #         key: ${{ runner.os }}-npm-${{ hashFiles('**/package-json.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-npm-
  #     - name: Install packages
  #       if: steps.npm-cache.outputs.cache-hit != 'true'
  #       run: npm
  #     - name: Run Tests
  #       run: npm test
  build:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache npm cache
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.cache/npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Run Build
        run: npm build
  dependencies:
    runs-on: buildjet-4vcpu-ubuntu-2204
    container:
      image: node:20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache node modules
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache npm cache
        id: npm-cache
        uses: buildjet/cache@v4
        with:
          path: ~/.cache/npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-json.lock') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install packages
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - name: Check for pinned dependencies
        run: |
          node -e '
            const fs = require("fs");
            const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
            const errors = [];

            function isPinned(version) {
              return /^\d+\.\d+\.\d+$|^[a-z]+:[a-z]+@\d+$/.test(version);
            }

            for (const [dep, version] of Object.entries(pkg.dependencies || {})) {
              if (!isPinned(version)) {
                errors.push(`Dependency "${dep}" is not pinned: "${version}"`);
              }
            }

            for (const [dep, version] of Object.entries(pkg.devDependencies || {})) {
              if (!isPinned(version)) {
                errors.push(`Dev dependency "${dep}" is not pinned: "${version}"`);
              }
            }

            if (errors.length > 0) {
              console.error(`\n${errors.join("\n")}\n`);
              process.exit(1);
            } else {
              console.log("All dependencies are pinned.");
            }
          '
